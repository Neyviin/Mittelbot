# ====================
# COMMIT PREFIX CHECK
# ====================
# allowed prefixes: "feat:" "fix:" "chore:" "docs:" "refactor:" "style:" "test:" "chore:" "perf:" "ci:" "revert:" "lang:"

chmod +x .husky/commit-msg
chmod +w .git/COMMIT_EDITMSG

commit_message_file="$1"
commit_message=$(cat "$commit_message_file")

RED='\033[0;31m'  # Red color code
GREEN='\033[0;32m'  # Green color code
NC='\033[0m'  # No color code

# Check if commit message has any of the specified prefixes
if echo "$commit_message" | grep -qE '^(feat:|fix:|chore:|docs:|refactor:|style:|test:|chore:|perf:|ci:|revert:|lang:)'; then
    printf "${GREEN}Commit message has a valid prefix.${NC}\n"
    exit 0  # Exit with success status
else
    printf "${RED}Commit message does not have any of the specified prefixes.${NC}\n"
    printf "${RED}Allowed prefixes: \"feat:\" \"fix:\" \"chore:\" \"docs:\" \"refactor:\" \"style:\" \"test:\" \"chore:\" \"perf:\" \"ci:\" \"revert:\" \"lang:\"${NC}\n"
    exit 1  # Exit with failure status
fi